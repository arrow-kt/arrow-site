name: Build site

on: pull_request

jobs:
  build_site:

    env:
      BASEDIR: ${{github.workspace}}/..

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Checkout orchestrator
      run: |
        cd $BASEDIR
        git clone https://github.com/arrow-kt/arrow.git
    - name: Prepare environment
      run: |
        set -ex
        $BASEDIR/arrow/scripts/site-prepare-env.sh
        sudo apt-get install tree
        bundle install --gemfile Gemfile --path vendor/bundle
    - name: Run Ank
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: ./gradlew runAnk
    - name: Build site
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
        JEKYLL_ENV: production
      run: |
        bundle exec jekyll build -b docs -s build/site -d build/_site
        mkdir $BASEDIR/logs
        tree build/_site > $BASEDIR/logs/docs.log
    - name: Generate and validate docs for all the libraries
      run: |
        for repository in $(cat $BASEDIR/arrow/lists/build.txt); do
            echo "TODO: remove!!"
            if [ "$repository" != "arrow-fx" ]; then
                cd $BASEDIR ; git clone https://github.com/arrow-kt/$repository.git
                if [ "$repository" != "arrow-docs" ]; then
                    cd $BASEDIR/$repository
                    ./gradlew clean dokka
                fi
                cd $BASEDIR/$repository ; ./gradlew :arrow-docs:runAnk
                cd $BASEDIR ; cp -r $repository/arrow-docs/build/site/* arrow-site/build/site/
            fi
        done
    - name: Build site
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
        JEKYLL_ENV: production
      run: |
        bundle exec jekyll build -b docs/next -s build/site -d build/_site
        tree build/_site > $BASEDIR/logs/docs-next.log
    - name: Other versions
      run: |
        if [ -f $BASEDIR/arrow-site/update-other-versions.txt ]; then
            for version in $(cat update-other-versions.txt); do
                echo "Update $version ..."
                SHORT_VERSION=$(echo $version | cut -d. -f1-2)
                cd $BASEDIR/arrow-site
                ./gradlew clean runAnk
                for repository in $(cat $BASEDIR/arrow/lists/build.txt); do
                    echo "TODO: remove!!"
                    if [ "$repository" != "arrow-fx" ]; then
                        cd $BASEDIR ; git checkout $version
                        if [ "$repository" != "arrow-docs" ]; then
                            cd $BASEDIR/$repository
                            ./gradlew clean dokka
                        fi
                        cd $BASEDIR/$repository ; ./gradlew :arrow-docs:runAnk
                        cd $BASEDIR ; cp -r $repository/arrow-docs/build/site/* arrow-site/build/site/
                    fi
                done
                cd $BASEDIR/arrow-site
                bundle exec jekyll build -b docs/$SHORT_VERSION -s build/site -d build/_site
                tree build/_site > $BASEDIR/logs/docs-${SHORT_VERSION}.log
            done            
        fi
    - uses: actions/upload-artifact@v1
      with:
        name: logs
        path: $BASEDIR/logs
